networks:
  internal:
    internal: true
  external:
    driver: bridge
  

services:
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - internal
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env

  redis:
    image: redis:latest
    networks:
      - internal
      
  backend:
    build: ./backend/backend_project
    image: tai-django-web
    container_name: cinema_backend
    ports:
      - 8000:8000
    volumes:
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
    depends_on:
      - db
      - redis
    environment:
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    env_file:
      - .env
    networks:
      - internal
      - external

  frontend:
    build: ./frontend
    image: tai-frontend
    container_name: cinema_frontend
    command: yarn start
    ports:
      - 3000:3000
    depends_on:
      - backend
    environment:
      REACT_APP_API_KEY: ${REACT_APP_API_KEY}
    env_file:
      - .env
    networks:
      - internal
      - external
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: /app/src
          ignore:
            - node_modules/
        - action: sync
          path: ./frontend/public
          target: /app/public
          ignore:
            - node_modules/
        - action: rebuild
          path: ./frontend/package.json
        - action: rebuild
          path: ./frontend/yarn.lock
    

volumes:
  postgres_data: