name: Deploy to Server

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy via SSH
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy project to server via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "."
          target: "/home/${{ secrets.SSH_USER }}/CinemaLand"

      - name: Upload .env to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "${{ secrets.ENV_FILE }}" > /home/${{ secrets.SSH_USER }}/CinemaLand/.env

      - name: Run deployment commands on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          timeout: 900s
          script: |
            cd /home/${{ secrets.SSH_USER }}/CinemaLand

            echo "Stopping containers %&"
            docker compose down -v

            echo "Pruning Docker system %&"
            docker system prune -af

            echo "Building containers %&"
            docker compose build || { echo "Build failed"; exit 1; }

            echo "Starting containers %&"
            docker compose -f compose.yaml up -d

            echo "Running Django migrations..."
            docker exec -it cinema_backend python manage.py migrate